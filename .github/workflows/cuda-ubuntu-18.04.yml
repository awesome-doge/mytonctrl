# This is a basic workflow to help you get started with Actions

name: cuda-ubuntu-18.04
on: [push,workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: 安裝 cuda 相關套件
        run: |
            echo -e "${COLOR}[1]${ENDC} 安裝 依賴套件"
            sudo sed -i 's/azure\.//' /etc/apt/sources.list
            sudo apt-get update
            sudo apt install -y build-essential git make cmake clang libgflags-dev zlib1g-dev libssl-dev libreadline-dev libmicrohttpd-dev pkg-config libgsl-dev python3 python3-dev python3-pip screen
            sudo pip3 install --upgrade setuptools
            sudo python3 -m pip install -U setuptools
            sudo pip3 install psutil crc16 requests nvitop
            sudo apt install nvidia-cuda-toolkit
      - name: 
        run: |
            echo -e "${COLOR}[3]${ENDC} 下載 pow-miner-gpu"
            cd /usr/src
            git clone --recursive https://github.com/awesome-doge/pow-miner-gpu.git
            cd /usr/src/pow-miner-gpu
            git checkout main
            cd /usr/src/
            mv pow-miner-gpu ton
            echo -e "${COLOR}[4]${ENDC} 初始化編譯環境"
            mkdir /usr/bin/ton
            cd /usr/bin/ton
            export CCACHE_DISABLE=1
            export CUDA_HOME=/usr/local/cuda
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64
            export PATH=$PATH:$CUDA_HOME/bin
            cmake -DCMAKE_BUILD_TYPE=Release -DMINERCUDA=true /usr/src/ton
            # 計算需要的cpu
            memory=$(cat /proc/meminfo | grep MemAvailable | awk '{print $2}')
            let "cpuNumber = memory / 2100000"
            # 編譯
            echo -e "${COLOR}[5]${ENDC} 編譯pow-miner-cuda lite-client"
            make -j ${cpuNumber} pow-miner-cuda lite-client fift
            cd ~
            mkdir build
            zip -r bin-ton-crypto.zip /usr/bin/ton/crypto
            cp bin-ton-crypto.zip build
      - name: send to release
        uses: fnkr/github-action-ghr@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_PATH: build/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
